/**
 * 
 * Shared Class to implement common operatons 
 * 
 */
class Shared{

    /**
     * This method is designed to parse validation errors generated by mongoose or 
     * a custom source. This method will accept JSON objects or strings encoded for url safety
     * by `encodeURIComponent` in the format:
     * "prop:msg, prop:msg, prop:msg"
     *          or
     * "ValidationError: prop:msg, prop:msg, prop:msg"
     * This method will then parse these formats into JSON
     * @param {} errMsg 
     * @returns JSON representing validation errors
     */
    static JsonifyValididationError(errMsg){
        
        if (typeof errMsg === "undefined") {
            return false;
        } else if (typeof errMsg === "null") {
            return false;
        }

        let validationError = decodeURIComponent(errMsg);

        //cut off the prefix ValidationError: 
        if (validationError.substring(0, 16) === "ValidationError:"){
            validationError = validationError.substring(17, validationError.length).split(",");
        }else{
            validationError = validationError.split(",");
        }

        let result = {};
        validationError.forEach(msg => {

            let parts = msg.split(":")
            result[parts[0].trim()] = parts[1].trim();

        });

        return result;
    }
}

module.exports = Shared;